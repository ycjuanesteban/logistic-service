version: '3.3'

networks:
  app-network: {}

services:
  bill-api:
    container_name: bill-api
    restart: always
    build:
      context: .
      dockerfile: ./apps/bill/Dockerfile
    environment:
      DB_HOST: 'host.docker.internal'
      DB_PORT: '3306'
      DB_USER_NAME: 'user'
      DB_PASSWORD: 'password'
      DB_DATA_BASE: 'db'
    ports:
      - "3001:3000"
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db

  logistic-api:
    container_name: logistic-api
    restart: always
    build:
      context: .
      dockerfile: ./apps/logistic/Dockerfile
    environment:
      DB_HOST: 'host.docker.internal'
      DB_PORT: '3306'
      DB_USER_NAME: 'user'
      DB_PASSWORD: 'password'
      DB_DATA_BASE: 'db'
    ports:
      - "3002:3000"
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db

  checkout-api:
    container_name: checkout-api
    restart: always
    environment:
      - BILL_SERVICE_URL=http://host.docker.internal:3001
      - LOGISTIC_SERVICE_URL=http://host.docker.internal:3002
    build:
      context: .
      dockerfile: ./apps/checkout/Dockerfile
    ports:
      - "3000:3000"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - app-network

volumes:
  my-db: